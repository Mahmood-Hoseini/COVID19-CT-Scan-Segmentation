[model]
model = cts_model       			# Model: cts_model
num_filters = [32,64,128,256]       # Number of filters in convolutional layers.
padding = same	   					# Padding in convolutional layers. Either `same' or `valid'
dropout = 0.0      					# Rate for dropout of activation units (set to zero to omit)

[loss]
loss = bce_dice             # Loss function: `pixel' for pixel-wise cross entropy,
                       		# `bce_dice' for binary-cross-entropy-dice loss,
                       		# `dice' for sorensen-dice coefficient,
                       		# `jaccard' for intersection over union
loss_weights = 0.5 0.5  # When using dice or jaccard loss, how much to weight each output class

[training]
epochs = 200			# Number of epochs to train
batch_size = 128        # Mini-batch size for training
validation_split = 0.1  # Fraction of training data to hold out for validation
optimizer = adam        # Optimizer: sgd, rmsprop, adagrad, adadelta, adam, adamax, or nadam
learning_rate =         # Optimizer learning rate
momentum =              # Momentum for SGD optimizer
decay =                 # Learning rate decay (for all optimizers except nadam)
shuffle_train_val = True
shuffle = True
seed = 42

[files]
load_weights =                		# Name of file to load previously-saved model weights
datadir = test-assets          		# Directory containing list of patientXX/ subdirectories
outdir = outputs              		# Where to write weight files
outfile = ctseg-final-weights.hdf5  # File to write final model weights
checkpoint = True             		# Whether to output model weight checkpoint files

[augmentation]
augment_training = True     # Whether to apply image augmentation to training set
augment_validation = True   # Whether to apply image augmentation to validation set
rotation_range = 15	   		# Rotation range (0-180 degrees)
width_shift_range = 0.2	    # Width shift range, as a float fraction of the width
height_shift_range = 0.2    # Height shift range, as a float fraction of the height
shear_range = 0.1           # Shear intensity (in radians)
zoom_range = 0.05           # Amount of zoom. If a scalar z, zoom in [1-z, 1+z].
                            # Can also pass a pair of floats as the zoom range.
normalize = False
